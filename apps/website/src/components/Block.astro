---
import type { Block, Props as $ } from "astro-portabletext/types";
import { usePortableText } from "astro-portabletext/utils";

export type Props = $<Block>;

const props = Astro.props;
const { node, index, isInline, ...attrs } = props;
const styleIs = (style: string) => style === node.style;

const { getUnknownComponent } = usePortableText(node);

const UnknownStyle = getUnknownComponent();
---

{
  styleIs("h1") ? (
    <h1 {...attrs}><slot /></h1>
  ) : styleIs("h2") ? (
    <h2 {...attrs}><slot /></h2>
  ) : styleIs("h3") ? (
    <h3 {...attrs}><slot /></h3>
  ) : styleIs("h4") ? (
    <h4 {...attrs}><slot /></h4>
  ) : styleIs("h5") ? (
    <h5 {...attrs}><slot /></h5>
  ) : styleIs("h6") ? (
    <h6 {...attrs}><slot /></h6>
  ) : styleIs("blockquote") ? (
    <blockquote {...attrs}><slot /></blockquote>
  ) : styleIs("normal") ? (
    <p {...attrs} class:list={[ 
      'text-indigo-900',
      'font-sans',
      'font-500', 
      'text-4xl', 
      'text-center', 
      'mt-8', 
      'mb-4', 
      'lt-lg:my-4', 
      'lt-lg:mx-18',
      'lt-md:text-3xl',
    ]}><slot /></p>
  ) : (
    <UnknownStyle {...props}><slot /></UnknownStyle>
  )
}
